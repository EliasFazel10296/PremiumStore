/*
 * Copyright Â© 2022 By Geeks Empire.
 *
 * Created by Elias Fazel
 * Last modified 3/15/22, 5:36 AM
 *
 * Licensed Under MIT License.
 * https://opensource.org/licenses/MIT
 */

plugins {
    id 'com.android.application'

    id 'com.google.gms.google-services'

    id 'kotlin-android'

    id 'com.google.firebase.crashlytics'
}

android {

    compileSdk 34

    defaultConfig {
        applicationId "co.geeksempire.premium.storefront.android"

        minSdkVersion 26
        targetSdkVersion 34

        versionCode 77
        versionName "${majorVersion}." + getDateMonth() + "." + getDateDay() + "." + getDateYear() + ".${versionCode}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled true
        }
        release {
            debuggable false
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        viewBinding true
    }

    flavorDimensions = ["PremiumStorefront"]
    productFlavors {
        productionConfiguration {
            dimension "PremiumStorefront"

            versionNameSuffix ''
        }
        betaConfiguration {
            dimension "PremiumStorefront"

            versionNameSuffix '[Beta]'
        }
    }

    dynamicFeatures = [':PremiumStorefrontMovies',
                       ':PremiumStorefrontBooks',
                       ':AdministratorPanel']

    namespace 'co.geeksempire.premium.storefront'
}

static def getDateYear() {
    def date = new Date()
    def formattedDate = date.format('yyyy')
    return formattedDate
}

static def getDateMonth() {
    def date = new Date()
    def formattedDate = date.format('MM')
    return formattedDate
}

static def getDateDay() {
    def date = new Date()
    def formattedDate = date.format('dd')
    return formattedDate
}

dependencies {
//    api fileTree(dir: 'libs', include: ['*.jar'])

//    api files('libs/youtube_player.jar')

    api project(path: ':BlurryEffectLibrary')
    api project(path: ':CustomShapes')
    api project(path: ':LoadingSpin')
    api project(path: ':BalloonOptionsMenuLibrary')
    api project(path: ':GeeksEmpireLayoutManager')
//    api project(path: ':YoutubePlayer')

    api 'com.pierfrancescosoffritti.androidyoutubeplayer:core:12.1.0'

    api 'com.google.android.play:feature-delivery-ktx:2.1.0'
    api 'com.google.android.play:app-update-ktx:2.1.0'
    api 'com.google.android.play:review-ktx:2.0.1'


    api 'com.google.android.material:material:1.10.0'


    api 'com.google.android.gms:play-services-auth:20.7.0'


    api 'androidx.core:core-ktx:1.12.0'
    api 'androidx.appcompat:appcompat:1.6.1'

    api 'androidx.fragment:fragment-ktx:1.6.2'

    api 'androidx.datastore:datastore-preferences:1.0.0'
    api 'androidx.datastore:datastore:1.0.0'

    api 'androidx.palette:palette-ktx:1.0.0'

    api 'androidx.dynamicanimation:dynamicanimation:1.0.0'

    api 'androidx.constraintlayout:constraintlayout:2.1.4'
    api 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'

    api 'androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    api 'androidx.work:work-runtime-ktx:2.8.1'


    api platform('com.google.firebase:firebase-bom:32.6.0')

    api 'com.google.firebase:firebase-analytics-ktx'

    api 'com.google.firebase:firebase-crashlytics-ktx'

    api 'com.google.firebase:firebase-auth-ktx'

    api 'com.google.firebase:firebase-messaging-ktx'
    api 'com.google.firebase:firebase-inappmessaging-display-ktx'

    api 'com.google.firebase:firebase-config-ktx'

    api 'com.google.firebase:firebase-dynamic-links-ktx'

    api 'com.google.firebase:firebase-config-ktx'

    api 'com.google.firebase:firebase-firestore-ktx'
    api 'com.google.firebase:firebase-database-ktx'

    api 'com.google.firebase:firebase-functions-ktx'

    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
    implementation 'com.google.firebase:firebase-appcheck-debug'


    api 'com.airbnb.android:lottie:6.0.0'


    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'


    api 'io.reactivex.rxjava2:rxkotlin:2.4.0'


    api 'com.android.volley:volley:1.2.1'


    api 'com.github.bumptech.glide:glide:4.15.1'


    api 'com.google.code.gson:gson:2.10.1'
    api 'org.jsoup:jsoup:1.15.4'


    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}